
package server;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ICT2WebService", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ICT2WebService {


    /**
     * 
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSmallestInteger", targetNamespace = "http://server/", className = "server.GetSmallestInteger")
    @ResponseWrapper(localName = "getSmallestIntegerResponse", targetNamespace = "http://server/", className = "server.GetSmallestIntegerResponse")
    @Action(input = "http://server/ICT2WebService/getSmallestIntegerRequest", output = "http://server/ICT2WebService/getSmallestIntegerResponse")
    public Integer getSmallestInteger();

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://server/", className = "server.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://server/", className = "server.HelloResponse")
    @Action(input = "http://server/ICT2WebService/helloRequest", output = "http://server/ICT2WebService/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "testConnection", targetNamespace = "http://server/", className = "server.TestConnection")
    @ResponseWrapper(localName = "testConnectionResponse", targetNamespace = "http://server/", className = "server.TestConnectionResponse")
    @Action(input = "http://server/ICT2WebService/testConnectionRequest", output = "http://server/ICT2WebService/testConnectionResponse")
    public Double testConnection();

    /**
     * 
     * @param s1
     * @param s2
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "shortestString", targetNamespace = "http://server/", className = "server.ShortestString")
    @ResponseWrapper(localName = "shortestStringResponse", targetNamespace = "http://server/", className = "server.ShortestStringResponse")
    @Action(input = "http://server/ICT2WebService/shortestStringRequest", output = "http://server/ICT2WebService/shortestStringResponse")
    public String shortestString(
        @WebParam(name = "s1", targetNamespace = "")
        String s1,
        @WebParam(name = "s2", targetNamespace = "")
        String s2);

    /**
     * 
     * @param integer
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addIntegerOnServer", targetNamespace = "http://server/", className = "server.AddIntegerOnServer")
    @ResponseWrapper(localName = "addIntegerOnServerResponse", targetNamespace = "http://server/", className = "server.AddIntegerOnServerResponse")
    @Action(input = "http://server/ICT2WebService/addIntegerOnServerRequest", output = "http://server/ICT2WebService/addIntegerOnServerResponse")
    public Boolean addIntegerOnServer(
        @WebParam(name = "integer", targetNamespace = "")
        Integer integer);

    /**
     * 
     * @param s1
     * @param s2
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "safeShortestString", targetNamespace = "http://server/", className = "server.SafeShortestString")
    @ResponseWrapper(localName = "safeShortestStringResponse", targetNamespace = "http://server/", className = "server.SafeShortestStringResponse")
    @Action(input = "http://server/ICT2WebService/safeShortestStringRequest", output = "http://server/ICT2WebService/safeShortestStringResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://server/ICT2WebService/safeShortestString/Fault/Exception")
    })
    public String safeShortestString(
        @WebParam(name = "s1", targetNamespace = "")
        String s1,
        @WebParam(name = "s2", targetNamespace = "")
        String s2)
        throws Exception_Exception
    ;

    /**
     * 
     * @param integer
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllIntegerSamplesBelow", targetNamespace = "http://server/", className = "server.GetAllIntegerSamplesBelow")
    @ResponseWrapper(localName = "getAllIntegerSamplesBelowResponse", targetNamespace = "http://server/", className = "server.GetAllIntegerSamplesBelowResponse")
    @Action(input = "http://server/ICT2WebService/getAllIntegerSamplesBelowRequest", output = "http://server/ICT2WebService/getAllIntegerSamplesBelowResponse")
    public List<Integer> getAllIntegerSamplesBelow(
        @WebParam(name = "integer", targetNamespace = "")
        Integer integer);

}
